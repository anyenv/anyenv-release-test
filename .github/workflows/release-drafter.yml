name: Release Drafter

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - id: tag
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          create-tag: false
          version-command: |
            eval $(egrep '^version=' libexec/anyenv---version) && echo "$version"
    outputs:
      current: ${{ steps.tag.outputs.current-version }}
      previous: ${{ steps.tag.outputs.previous-version }}

  publish_release:
    needs:
      - version
    if: needs.version.outputs.current != needs.version.outputs.previous
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - id: publish
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # publish: true
          version: ${{ needs.version.outputs.current }}
  
  update_release_draft:
    needs:
      - version
    if: needs.version.outputs.current == needs.version.outputs.previous
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - id: draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{ steps.draft.outputs.tag_name }}
      body: ${{ steps.draft.outputs.body }}
  
  update_bump_pull_request:
    needs: 
      - update_release_draft
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          set -xe
          tag=${{ needs.update_release_draft.outputs.tag }}
          version=${tag:1}
          sed -i "s/^version=.\+$/version=\"${version}\"/" libexec/anyenv---version
          git diff
      - uses: gr2m/create-or-update-pull-request-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ${{ needs.update_release_draft.outputs.tag }}
          body: ${{ needs.update_release_draft.outputs.body }}
          branch: bump/${{ needs.update_release_draft.outputs.tag }}
          commit-message: "My commit message for uncommitted changes in lib/ folder"
          update-pull-request-title-and-body: true

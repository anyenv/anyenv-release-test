name: Release Drafter

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  check-bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - id: tag
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          create-tag: false
          version-command: |
            eval $(egrep '^version=' libexec/anyenv---version) && echo "$version"
    outputs:
      is-publish: ${{ startsWith(steps.tag.outputs.tag, 'v') }}
      is-draft: ${{ !startsWith(steps.tag.outputs.tag, 'v') }}
      version: ${{ steps.tag.outputs.current-version }}
      tag: ${{ steps.tag.outputs.tag }}

  publish_release:
    needs:
      - check-bump
    if: needs.check-bump.outputs.is-publish == 'true'
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.check-bump.outputs.is-publish }}
      - run: echo ${{ needs.check-bump.outputs.is-draft }}
      - id: publish
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # publish: true
          name: ${{ needs.check-bump.outputs.tag }}
          tag: ${{ needs.check-bump.outputs.tag }}
          version: ${{ needs.check-bump.outputs.version }}
  
  update_release_draft:
    needs:
      - check-bump
    if: needs.check-bump.output.is-draft == 'true'
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - id: draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      draft-tag: ${{ steps.draft.outputs.tag_name }}
  
  update_bump_pull_request:
    needs: 
      - update_release_draft
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
